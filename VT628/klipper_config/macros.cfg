[include macro_overrides.cfg]

[virtual_sdcard]
path: /home/niels/gcode_files

[pause_resume]

[display_status]

[bed_mesh]
speed: 120
horizontal_move_z: 12
mesh_min: 35, 35
mesh_max: 240, 240
probe_count: 5, 3

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_DISPLAY_PAUSE_COLORS
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause macro zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x//2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSE_PARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=7200                                                       ; set timeout to 2 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_DISPLAY_INITIAL_COLORS
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative pos
   G1 E10 F300                    ; extrude a little to shape tip
   G1 E-80 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute pos

[gcode_macro LOAD_FILAMENT]
gcode:
    M117 Heat Hotend
    M106 S51            ; turn on fans so we don't melt ducts
    M109 S240            ; wait for hotend to heat to 240
    M83                            ; set extruder to relative
    G1 E30 F300                    ; load
    G1 E20 F150                    ; prime nozzle with filament
    M82                            ; set extruder to absolute
   
[gcode_macro NOZZLE_CHANGE]
description: Heat hotend and retract filament, cool down hotend again.
gcode:
    M117 HOMING
    C_G28
    M117 Heat Hotend
    M106 S51            ; turn on fans so we don't melt ducts
    M109 S240            ; wait for hotend to heat to 240
    UNLOAD_FILAMENT
    # SCRUB_NOZZLE
    M104 S0            
    M106 S191

    G0 X125 Y125 Z125 F3600

[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set wipe_count = 8 %}
  SAVE_GCODE_STATE NAME=CLEAN_NOZZLE_STATE
  G90
  G0 Z15 F300
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(200, 250),(225, 250)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} Z0 F12000
    {% endfor %}
  {% endfor %}
  RESTORE_GCODE_STATE NAME=CLEAN_NOZZLE_STATE

[gcode_macro SET_CASELIGHT]
gcode:
    {% set VALUE = params.VALUE|default(0.5)|float %}
    {% if 'VALUE' not in params %}
        {% set intensity = params['_']|default(0.5)|float %}
    {% endif %}
    SET_LED LED=caselight RED={VALUE} GREEN={VALUE} BLUE={VALUE}

[gcode_macro SET_NOZZLE_LIGHT]
gcode:
    {% set VALUE = params.VALUE|default(1)|int %}
    SET_PIN PIN=nozzle_light_pin VALUE={VALUE}

[gcode_macro PRINT_START]
gcode:
    {% set hotend_temp = params.EXTRUDER|int %}
    {% set bed_temp = params.BED|int %}
    {% set chamber_temp = params.CHAMBER|default(55)|int %}

    G92 E0                         ; zero the extruder
    M117 Preheat Bed
    M190 S{bed_temp}               ; wait for bed to heat to target temperature

    M117 Heat Hotend
    M106 S10                       ; turn on fans so we don't melt ducts
    M109 S{hotend_temp}

    C_G28 

    # M117 TRAM BED
    C_Z_TILT_ADJUST

    # M117 BED MESH
    # BED_MESH_CALIBRATE
    SET_NOZZLE_LIGHT VALUE=1

    # M117 CLEAN NOZZLE
    # CLEAN_NOZZLE

    # Raise nozzle by 10mm
    G1 Z10 F3000
    M117 PRINTING..


[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set toolhead = printer.toolhead %}
    {% set x_safe = toolhead.position.x + 20 * (1 if toolhead.axis_maximum.x - toolhead.position.x > 20 else -1) %}
    {% set y_safe = toolhead.position.y + 20 * (1 if toolhead.axis_maximum.y - toolhead.position.y > 20 else -1) %}
    {% set z_safe = [toolhead.position.z + 2, toolhead.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{toolhead.axis_maximum.x//2} Y{toolhead.axis_maximum.y} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


# Park at center of build volume
[gcode_macro PARK_CENTER]
gcode:
    {% set toolhead = printer.toolhead %}
    C_G28
    SAVE_GCODE_STATE NAME=PARK_CENTER
    G90                               ; absolute positioning
    G0 X{toolhead.axis_maximum.x//2} Y{toolhead.axis_maximum.y//2} Z{toolhead.axis_maximum.z//2} F6000    
    RESTORE_GCODE_STATE NAME=PARK_CENTER

